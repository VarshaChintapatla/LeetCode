class Solution {
    public int calPoints(String[] operations) {
       int[] a=new int[operations.length];
     int sum=0;
     int j=0;
     for(int i=0;i<operations.length;i++)
       {
        switch(operations[i])
        {
            case "C":
              a[j-1]=0;
              j=j-1;
              break;
            case "D":
            a[j]=2*a[j-1];
            j=j+1;
            break;
            case "+":
            a[j]=a[j-1]+a[j-2];
            j=j+1;
            break;
            default:
            a[j]=Integer.parseInt(operations[i]);
            j=j+1;
            break;
        }
       }
      for(int i=0;i<a.length;i++)
      {
        sum=sum+a[i];
       } 
     return sum;
    }
}






Example 1:

Input: ops = ["5","2","C","D","+"]
Output: 30
Explanation:
"5" - Add 5 to the record, record is now [5].
"2" - Add 2 to the record, record is now [5, 2].
"C" - Invalidate and remove the previous score, record is now [5].
"D" - Add 2 * 5 = 10 to the record, record is now [5, 10].
"+" - Add 5 + 10 = 15 to the record, record is now [5, 10, 15].
The total sum is 5 + 10 + 15 = 30.
Example 2:

Input: ops = ["5","-2","4","C","D","9","+","+"]
Output: 27
Explanation:
"5" - Add 5 to the record, record is now [5].
"-2" - Add -2 to the record, record is now [5, -2].
"4" - Add 4 to the record, record is now [5, -2, 4].
"C" - Invalidate and remove the previous score, record is now [5, -2].
"D" - Add 2 * -2 = -4 to the record, record is now [5, -2, -4].
"9" - Add 9 to the record, record is now [5, -2, -4, 9].
"+" - Add -4 + 9 = 5 to the record, record is now [5, -2, -4, 9, 5].
"+" - Add 9 + 5 = 14 to the record, record is now [5, -2, -4, 9, 5, 14].
The total sum is 5 + -2 + -4 + 9 + 5 + 14 = 27.
Example 3:

Input: ops = ["1","C"]
Output: 0
Explanation:
"1" - Add 1 to the record, record is now [1].
"C" - Invalidate and remove the previous score, record is now [].
Since the record is empty, the total sum is 0.
